#!#
#!# The XMX configuration: specifies which apps/classes are managed and
#!# which management interfaces and possibilities are provided.
#!#
#!# Lines starting with "#!" specify the default options of the current XMX
#!# version and are updated automatically. In order to change a default option,
#!# please uncomment it and modify the value, or just override on a separate
#!# line. Either way, the modified option will persist even in a case of XMX
#!# updates. However, if there are several sections with the same name, they
#!# may be split together.
#!# In case of major updates, it is recommended to compare the changed
#!# values against the defaults and update manually if necessary.

#!#
#!# [System] section contains global settings for XMX system
[System]
#!#
#!# Whether to enable XMX at all
#! Enabled = true
#!#
#!# Whether to enable the embedded web server
#! EmbeddedWebServer.Enabled = true
#!#
#!# The embedded web server implementation. Only Jetty is supported now
#! EmbeddedWebServer.Impl = Jetty
#!#
#!# The port for the embedded web server
#! EmbeddedWebServer.Port = 8081
#!#
#!# Whether to publish managed objects to JMX
#! JMX.Bridge.Enabled = false
#!#
#!# The log level: OFF, ERROR, WARN, INFO or DEBUG
#! Log.Level = INFO
#!#
#!# The directory for log files or STDOUT or STDERR
#! Log.Dir = ${user.home}/.xmx/logs/
#!#
#!# (optional) A custom Logback configuration XML file
#! Log.LogbackCfg.File =
#
# Customize welcome message for Sprimg MX
Welcome.Name = Spring MX
Welcome.Home.Skip = true

#!#
#!# Per-application an per-class settings sections follow, marked as either
#!# [App=app_name_pattern] or [App=app_name_pattern;Class=class_name_pattern],
#!# respectively. These patterns may be just names with optional '*' for simple
#!# cases, or Java RegEx full patterns enclosed in ^$, e.g. "^(a|bc)[def].*$".
#!#
#!# Currently the app names are recognized only for the web applications
#!# deployed to Tomcat or Jetty application servers.
#!#
#!# As the application/class names may match several patterns, the settings
#!# override each other, and the latest matching setting wins.
#!#
#!# [App=*] section contains the default settings for all applications.
[App=*]
#!#
#!# Whether the management is enabled for the application
#! AppManagementEnabled = true
#!#
#!# Determines instances of which application classes are managed by XMX
#! ManagedClasses = ^.*(Service|(?<![rR]eference)Manager|Engine|DataSource)\d*(Impl\d*)?$
ManagedClasses = 

#!#
#!# This section contains the default settings for all managed classes in all
#!# managed applications.
[App=*; Class=*]
#!#
#!# Max number of managed instances per class
#! MaxInstances = 10

#!#
#!# This sample section shows how to override 'Managed'/'ManagedClasses'
#!# options in the previous sections and disable or enable the management of
#!# the matching classes.
[App=sampleapp; Class=com.example.SampleService]
#!#
#!# Specifies whether the matching classes shall be managed or not
#! Managed = false

#!#
#!# This sample section shows how to specify custom AOP-like advices for the
#!# specified target method(s) in the managed class. For more details, see the
#!# section "AOP Advices" in README.txt
[App=sampleapp; Class=org.example.MyClassToManage; Method="foo(int,String)"]
#!#
#!# Specifies the JAR file and class with the advices to use for the target method(s)
#! Advices = yourAdvices.jar:org.example.YourAdvicesClass

